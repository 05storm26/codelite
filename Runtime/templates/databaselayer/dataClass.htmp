#ifndef %%classItemDef%%
#define %%classItemDef%%

#include <vector>
#include <string>

// %%classTableName%% //////////////////////////////////////////////////////////

/*! \brief Class for %%classTableName%% table */
class %%classItemName%% {

public:
	%%classItemVariables%%
};

// %%classTableName%% collection ///////////////////////////////////////////////

/*! \brief Collection from %%classColName%% table */
class %%classColName%% {

public:
	/*! \brief Get item list */
	const std::vector<%%classItemName%%>& GetCollection() const { return m_collection; }

	/*! \brief Get all data from database */
	virtual void Load()=0;
	
	/*! \brief Get data from database with WHERE statement */
	virtual void Load(const std::string &condition)=0;
	
protected:
	std::vector<%%classItemName%%> m_collection;
};

// %%classTableName%% utilities ////////////////////////////////////////////////

/*! \brief Utils for %%classTableName%% table */
class %%classUtilName%% {

public:
	/*! \brief Get CREATE SQL query for %%classTableName%% table */
	static std::string CreateSql();
};

#endif // %%classItemDef%%
